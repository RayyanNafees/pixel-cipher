'''
Module for testing and experimenting code
'''

from fib import csv_to_cycles_rem, defib, file_to_int, fib_compress

# CSV to fib function


# FileCheck: Checks the file_data == defibified:= mul(fibonacci cycles)+remainder


def fib_check(file_path: str) -> bool:
    '''Tests if the int data generated by defib(cycles+remainder) == Actual int data
    of the fle '''
    out_file = 'text.csv'
    fib_compress(file_path, out_file)
    cycles, rem = csv_to_cycles_rem(out_file)

    generated_int = defib(cycles, rem)
    file_int = file_to_int(file_path)

    isequal = generated_int == file_int
    print('Test Results: ', isequal)
    if generated_int > file_int:
        print("Generated larger integer")
    else:
        print("Generated smaller integer")
    print('Generated length: ', len(str(generated_int)))
    print('File Data length:', len(str(file_int)))

    return isequal


# fib_check('cipher.js')
